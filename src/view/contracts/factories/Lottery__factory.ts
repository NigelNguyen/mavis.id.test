/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lottery, LotteryInterface } from "../Lottery";

const _abi = [
  {
    inputs: [
      {
        internaltype: "address[]",
        name: "_moderators",
        type: "address[]",
      },
    ],
    statemutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internaltype: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internaltype: "uint8",
        name: "number",
        type: "uint8",
      },
      {
        indexed: false,
        internaltype: "uint256",
        name: "points",
        type: "uint256",
      },
    ],
    name: "numbersubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internaltype: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "resetall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internaltype: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internaltype: "uint8",
        name: "luckynumber",
        type: "uint8",
      },
    ],
    name: "submitlotterynumber",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internaltype: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internaltype: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfermoneytowinner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internaltype: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internaltype: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "transferowner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internaltype: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internaltype: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawall",
    type: "event",
  },
  {
    inputs: [],
    name: "max_numbers_per_player",
    outputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "max_players",
    outputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "max_points_per_number",
    outputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "max_points_per_player",
    outputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "point_value",
    outputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reward_ratio",
    outputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "time_submit",
    outputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "address",
        name: "_moderator",
        type: "address",
      },
    ],
    name: "addmoderator",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allnumbers",
    outputs: [
      {
        internaltype: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_all_numbers",
    outputs: [
      {
        internaltype: "uint8[]",
        name: "",
        type: "uint8[]",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_all_numbers_and_points",
    outputs: [
      {
        internaltype: "uint8[]",
        name: "",
        type: "uint8[]",
      },
      {
        internaltype: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_all_players_address",
    outputs: [
      {
        internaltype: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "address",
        name: "playeraddress",
        type: "address",
      },
    ],
    name: "get_player_numbers",
    outputs: [
      {
        internaltype: "uint8[]",
        name: "",
        type: "uint8[]",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "address",
        name: "playeraddress",
        type: "address",
      },
    ],
    name: "get_player_numbers_and_points",
    outputs: [
      {
        internaltype: "uint8[]",
        name: "",
        type: "uint8[]",
      },
      {
        internaltype: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "address",
        name: "playeraddress",
        type: "address",
      },
    ],
    name: "get_player_points",
    outputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "address",
        name: "playeraddress",
        type: "address",
      },
      {
        internaltype: "uint8",
        name: "number",
        type: "uint8",
      },
    ],
    name: "get_player_points_per_number",
    outputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint8",
        name: "number",
        type: "uint8",
      },
    ],
    name: "get_points_per_number",
    outputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_total_reward",
    outputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_winners",
    outputs: [
      {
        components: [
          {
            internaltype: "address payable",
            name: "playeraddress",
            type: "address",
          },
          {
            internaltype: "uint256",
            name: "points",
            type: "uint256",
          },
        ],
        internaltype: "struct lottery.winner[]",
        name: "",
        type: "tuple[]",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "ismoderator",
    outputs: [
      {
        internaltype: "bool",
        name: "",
        type: "bool",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "moderators",
    outputs: [
      {
        internaltype: "address",
        name: "",
        type: "address",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internaltype: "address",
        name: "",
        type: "address",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause_submit",
    outputs: [
      {
        internaltype: "bool",
        name: "",
        type: "bool",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "playeraddresses",
    outputs: [
      {
        internaltype: "address",
        name: "",
        type: "address",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        internaltype: "address payable",
        name: "playeraddress",
        type: "address",
      },
      {
        internaltype: "uint256",
        name: "points",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "pointspernumber",
    outputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "address",
        name: "_moderator",
        type: "address",
      },
    ],
    name: "removemoderator",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reset_all",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint256",
        name: "_new_value",
        type: "uint256",
      },
    ],
    name: "set_max_numbers_per_player",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint256",
        name: "_new_value",
        type: "uint256",
      },
    ],
    name: "set_max_players",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint256",
        name: "_new_value",
        type: "uint256",
      },
    ],
    name: "set_max_points_per_number",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint256",
        name: "_new_value",
        type: "uint256",
      },
    ],
    name: "set_max_points_per_player",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint256",
        name: "_new_value",
        type: "uint256",
      },
    ],
    name: "set_point_value",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "set_reward_ratio",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint256",
        name: "_new_value",
        type: "uint256",
      },
    ],
    name: "set_time_to_submit",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint8",
        name: "luckynumber",
        type: "uint8",
      },
    ],
    name: "submit_lottery_number",
    outputs: [
      {
        components: [
          {
            internaltype: "address payable",
            name: "playeraddress",
            type: "address",
          },
          {
            internaltype: "uint256",
            name: "points",
            type: "uint256",
          },
        ],
        internaltype: "struct lottery.winner[]",
        name: "",
        type: "tuple[]",
      },
    ],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint8[]",
        name: "numbers",
        type: "uint8[]",
      },
      {
        internaltype: "uint256[]",
        name: "points",
        type: "uint256[]",
      },
    ],
    name: "submit_numbers",
    outputs: [],
    statemutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "transfer_money_to_winner",
    outputs: [],
    statemutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "transfer_owner",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internaltype: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "winners",
    outputs: [
      {
        internaltype: "address payable",
        name: "playeraddress",
        type: "address",
      },
      {
        internaltype: "uint256",
        name: "points",
        type: "uint256",
      },
    ],
    statemutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw_all",
    outputs: [],
    statemutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670de0b6b3a7640000600155600a6002819055600381905560048190556050600555606460065560078190556008805460ff1990811690915581541690553480156200004f57600080fd5b5060405162002d7538038062002d758339810160408190526200007291620001a6565b600080546001600160a01b03191633179055805162000099906009906020840190620000f2565b5050600080546009805460018101825592527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af90910180546001600160a01b0319166001600160a01b0390921691909117905562000278565b8280548282559060005260206000209081019282156200014a579160200282015b828111156200014a57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000113565b50620001589291506200015c565b5090565b5b808211156200015857600081556001016200015d565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620001a157600080fd5b919050565b60006020808385031215620001ba57600080fd5b82516001600160401b0380821115620001d257600080fd5b818501915085601f830112620001e757600080fd5b815181811115620001fc57620001fc62000173565b8060051b604051601f19603f8301168101818110858211171562000224576200022462000173565b6040529182528482019250838101850191888311156200024357600080fd5b938501935b828510156200026c576200025c8562000189565b8452938501939285019262000248565b98975050505050505050565b612aed80620002886000396000f3fe60806040526004361061025c5760003560e01c80638da5cb5b11610144578063ba08f992116100b6578063dc63ef301161007a578063dc63ef301461070b578063dd473d2b1461072b578063e2eb41ff14610740578063ed400c6114610780578063ed6c15f6146107a0578063fa6f3936146107b657600080fd5b8063ba08f99214610668578063ba0e387a14610688578063bc173f13146106a8578063bd842a11146106d5578063dbbb489b146106f557600080fd5b8063af52834911610108578063af528349146105d3578063b0bc990d146105e9578063b16060a6146105fe578063b532e4cb14610613578063b60717c014610633578063b939b03a1461065357600080fd5b80638da5cb5b1461052a57806390bf7dc81461054a578063943f4bed146105525780639f66381314610572578063a2fb11751461059457600080fd5b80635e5b9468116101dd5780637410c87e116101a15780637410c87e1461046d5780637d556ec01461048d5780638456cb59146104a35780638671fae5146104b8578063869d785f146104ea5780638c2ed5931461050a57600080fd5b80635e5b9468146103b357806362dfae1d146103dd57806366568cec146104005780636e6c6e6a1461042057806372f5bdeb1461044d57600080fd5b80633f4ba83a116102245780633f4ba83a1461033c5780634411b3eb14610351578063446e8aea146103675780634704579d1461037d57806356f65fce1461039357600080fd5b80630c674e151461026157806315c6aee2146102ad57806325b6fe0c146102e55780632889606614610307578063314da1c414610329575b600080fd5b34801561026d57600080fd5b5061029a61027c3660046125d1565b6001600160a01b03166000908152600b602052604090206001015490565b6040519081526020015b60405180910390f35b3480156102b957600080fd5b506102cd6102c83660046125f3565b6107d6565b6040516001600160a01b0390911681526020016102a4565b3480156102f157600080fd5b506102fa610800565b6040516102a4919061260c565b34801561031357600080fd5b506103276103223660046125d1565b610875565b005b61032761033736600461274b565b6108fe565b34801561034857600080fd5b50610327610ce7565b34801561035d57600080fd5b5061029a60065481565b34801561037357600080fd5b5061029a60015481565b34801561038957600080fd5b5061029a60025481565b34801561039f57600080fd5b506103276103ae3660046125f3565b610d2d565b3480156103bf57600080fd5b506008546103cd9060ff1681565b60405190151581526020016102a4565b3480156103e957600080fd5b506103f2610d6c565b6040516102a4929190612849565b34801561040c57600080fd5b5061029a61041b3660046128a0565b610f11565b34801561042c57600080fd5b5061044061043b3660046125d1565b610f8a565b6040516102a491906128d3565b34801561045957600080fd5b506103276104683660046125f3565b61101a565b34801561047957600080fd5b5061029a6104883660046128e6565b611059565b34801561049957600080fd5b5061029a60035481565b3480156104af57600080fd5b506103276110c6565b3480156104c457600080fd5b506104d86104d33660046125f3565b61110f565b60405160ff90911681526020016102a4565b3480156104f657600080fd5b506103276105053660046125d1565b611143565b34801561051657600080fd5b506103276105253660046125f3565b611278565b34801561053657600080fd5b506000546102cd906001600160a01b031681565b6103276112b7565b34801561055e57600080fd5b506102fa61056d3660046128e6565b611559565b34801561057e57600080fd5b5061058761177c565b6040516102a49190612901565b3480156105a057600080fd5b506105b46105af3660046125f3565b6117de565b604080516001600160a01b0390931683526020830191909152016102a4565b3480156105df57600080fd5b5061029a60055481565b3480156105f557600080fd5b50610440611816565b34801561060a57600080fd5b5061032761188b565b34801561061f57600080fd5b5061032761062e3660046125d1565b611a82565b34801561063f57600080fd5b506103f261064e3660046125d1565b611ba0565b34801561065f57600080fd5b5061029a611dde565b34801561067457600080fd5b506103276106833660046125f3565b611e79565b34801561069457600080fd5b506103276106a33660046125f3565b611eb8565b3480156106b457600080fd5b5061029a6106c33660046128e6565b600c6020526000908152604090205481565b3480156106e157600080fd5b506102cd6106f03660046125f3565b611ef7565b34801561070157600080fd5b5061029a60075481565b34801561071757600080fd5b506103276107263660046125f3565b611f07565b34801561073757600080fd5b50610327611f46565b34801561074c57600080fd5b506105b461075b3660046125d1565b600b60205260009081526040902080546001909101546001600160a01b039091169082565b34801561078c57600080fd5b5061032761079b3660046125f3565b61208a565b3480156107ac57600080fd5b5061029a60045481565b3480156107c257600080fd5b506103cd6107d13660046125d1565b6120c9565b600d81815481106107e657600080fd5b6000918252602090912001546001600160a01b0316905081565b6060600f805480602002602001604051908101604052809291908181526020016000905b8282101561086c576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610824565b50505050905090565b6000546001600160a01b031633146108a85760405162461bcd60e51b815260040161089f9061294e565b60405180910390fd5b600080546001600160a01b0319166001600160a01b03831690811790915560405190815233907f5bb496b3f951b55d3a1d8e479725a4d25bdc7644fc355f0b71c540354820a1c59060200160405180910390a250565b600061090d620151804261298f565b9050600754610e1061091f91906129c7565b81111561096e5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74207375626d697420617420746869732074696d65000000000000604482015260640161089f565b60085460ff16156109bd5760405162461bcd60e51b815260206004820152601960248201527810dbdb9d1c9858dd081c185d5cd959081d1bc81cdd589b5a5d603a1b604482015260640161089f565b8151835114610a065760405162461bcd60e51b8152602060048201526015602482015274092dcecc2d8d2c840c2e4e4c2f2e640d8cadccee8d605b1b604482015260640161089f565b600654600d54339111610a4d5760405162461bcd60e51b815260206004820152600f60248201526e4d6178696d756d20706c617965727360881b604482015260640161089f565b6000805b8451811015610afc576000858281518110610a6e57610a6e6129de565b602002602001015111610ac35760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420706f696e74732c20706f696e742069732030000000000000604482015260640161089f565b848181518110610ad557610ad56129de565b602002602001015182610ae891906129f4565b915080610af481612a07565b915050610a51565b50600354811115610b6c5760405162461bcd60e51b815260206004820152603460248201527f746f74616c20706f696e7473206d757374206265206c657373207468616e204d60448201527320ac2fa827a4a72a29afa822a92fa82620aca2a960611b606482015260840161089f565b600154610b7990826129c7565b341015610be25760405162461bcd60e51b815260206004820152603160248201527f696e76616c696420616d6f756e742c20616d6f756e74206d7573742062652067604482015270726561746572207468616e2076616c756560781b606482015260840161089f565b60005b8551811015610cdf576000868281518110610c0257610c026129de565b602002602001015160ff1610158015610c3857506063868281518110610c2a57610c2a6129de565b602002602001015160ff1611155b610c905760405162461bcd60e51b8152602060048201526024808201527f696e76616c6964206e756d626572732c206e756d626572206f7574206f662072604482015263616e676560e01b606482015260840161089f565b610ccd83878381518110610ca657610ca66129de565b6020026020010151878481518110610cc057610cc06129de565b6020026020010151612132565b80610cd781612a07565b915050610be5565b505050505050565b610cf0336120c9565b80610d0557506000546001600160a01b031633145b610d215760405162461bcd60e51b815260040161089f90612a20565b6008805460ff19169055565b610d36336120c9565b80610d4b57506000546001600160a01b031633145b610d675760405162461bcd60e51b815260040161089f90612a20565b600155565b600e546060908190610db75760405162461bcd60e51b8152602060048201526014602482015273416c6c206e756d6265727320697320656d70747960601b604482015260640161089f565b600e5460009067ffffffffffffffff811115610dd557610dd5612664565b604051908082528060200260200182016040528015610dfe578160200160208202803683370190505b50600e5490915060009067ffffffffffffffff811115610e2057610e20612664565b604051908082528060200260200182016040528015610e49578160200160208202803683370190505b50905060005b600e5460ff82161015610f07576000600e8260ff1681548110610e7457610e746129de565b60009182526020808320818304015460ff601f9093166101000a90048216808452600c90915260409092205486519293509183918791908616908110610ebc57610ebc6129de565b602002602001019060ff16908160ff168152505080848460ff1681518110610ee657610ee66129de565b60200260200101818152505050508080610eff90612a6f565b915050610e4f565b5090939092509050565b600060638260ff161115610f585760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210373ab6b132b960911b604482015260640161089f565b506001600160a01b0382166000908152600b6020908152604080832060ff851684526003019091529020545b92915050565b6001600160a01b0381166000908152600b6020908152604091829020600281018054845181850281018501909552808552606094929383018282801561100d57602002820191906000526020600020906000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610fde5790505b5050505050915050919050565b611023336120c9565b8061103857506000546001600160a01b031633145b6110545760405162461bcd60e51b815260040161089f90612a20565b600455565b600060638260ff1611156110a05760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210373ab6b132b960911b604482015260640161089f565b50336000908152600b6020908152604080832060ff909416835260039093019052205490565b6110cf336120c9565b806110e457506000546001600160a01b031633145b6111005760405162461bcd60e51b815260040161089f90612a20565b6008805460ff19166001179055565b600e818154811061111f57600080fd5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b6000546001600160a01b0316331461116d5760405162461bcd60e51b815260040161089f9061294e565b60005b60095481101561127457816001600160a01b031660098281548110611197576111976129de565b6000918252602090912001546001600160a01b03160361126257600980546111c190600190612a8e565b815481106111d1576111d16129de565b600091825260209091200154600980546001600160a01b0390921691839081106111fd576111fd6129de565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600980548061123c5761123c612aa1565b600082815260209020810160001990810180546001600160a01b03191690550190555050565b8061126c81612a07565b915050611170565b5050565b611281336120c9565b8061129657506000546001600160a01b031633145b6112b25760405162461bcd60e51b815260040161089f90612a20565b600255565b6112c0336120c9565b806112d557506000546001600160a01b031633145b6112f15760405162461bcd60e51b815260040161089f90612a20565b6000805b600f54811015611385576000600f8281548110611314576113146129de565b600091825260208083206040805180820190915260029093020180546001600160a01b031683526001908101549183018290525460055492945091611358916129c7565b61136291906129c7565b905061136e81856129f4565b93505050808061137d90612a07565b9150506112f5565b50478111156113d65760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420656e6f7567682062616c616e636520746f207472616e736665720000604482015260640161089f565b60005b600f54811015611543576000600f82815481106113f8576113f86129de565b600091825260208083206040805180820190915260029093020180546001600160a01b03168352600190810154918301829052546005549294509161143c916129c7565b61144691906129c7565b9050600082600001516001600160a01b031682610dac90604051600060405180830381858888f193505050503d806000811461149e576040519150601f19603f3d011682016040523d82523d6000602084013e6114a3565b606091505b50509050806114e65760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161089f565b82600001516001600160a01b03167f4930f16b853c47904c6023679cb409581aedf9cc7de12e72027e9cf4b9f7dc178360405161152591815260200190565b60405180910390a2505050808061153b90612a07565b9150506113d9565b5061154c61188b565b50600a805460ff19169055565b6060611564336120c9565b8061157957506000546001600160a01b031633145b6115955760405162461bcd60e51b815260040161089f90612a20565b60638260ff1611156115e05760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b210363ab1b5bc90373ab6b132b960611b604482015260640161089f565b60005b600d548110156116fa576000600d8281548110611602576116026129de565b60009182526020808320909101546001600160a01b0316808352600b8252604080842060ff89168552600381019093529092205491925090156116e557604080518082018252600060208083018281526001600160a01b03878116855260ff8b16845260038701909252938220548452600f8054600181018255925291517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802600290920291820180546001600160a01b031916919093161790915590517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac803909101555b505080806116f290612a07565b9150506115e3565b50600a805460ff19166001179055600f80546040805160208084028201810190925282815292919060009084015b82821015611770576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101611728565b5050505090505b919050565b6060600d8054806020026020016040519081016040528092919081815260200182805480156117d457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116117b6575b5050505050905090565b600f81815481106117ee57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6060600e8054806020026020016040519081016040528092919081815260200182805480156117d457602002820191906000526020600020906000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116118535790505050505050905090565b611894336120c9565b806118a957506000546001600160a01b031633145b6118c55760405162461bcd60e51b815260040161089f90612a20565b60005b600d548110156119c7576000600d82815481106118e7576118e76129de565b60009182526020808320909101546001600160a01b0316808352600b90915260408220909250905b600282015481101561197457816003016000836002018381548110611936576119366129de565b600091825260208083208183040154601f9092166101000a90910460ff1683528201929092526040018120558061196c81612a07565b91505061190f565b506001600160a01b0382166000908152600b6020526040812080546001600160a01b031916815560018101829055906119b06002830182612514565b5050505080806119bf90612a07565b9150506118c8565b506119d4600d600061253c565b60005b600e5460ff82161015611a3c57600c6000600e8360ff16815481106119fe576119fe6129de565b600091825260208083208183040154601f9092166101000a90910460ff16835282019290925260400181205580611a3481612a6f565b9150506119d7565b50611a49600e6000612514565b611a55600f600061255a565b60405133907fc8606f20479092da6d2c0e444c69d3e7477b2b2949f188d39724e4efe0dad4dd90600090a2565b6000546001600160a01b03163314611aac5760405162461bcd60e51b815260040161089f9061294e565b611ab5816120c9565b15611b025760405162461bcd60e51b815260206004820152601e60248201527f4164647265737320697320616c72656164792061206d6f64657261746f720000604482015260640161089f565b6001600160a01b038116611b4e5760405162461bcd60e51b81526020600482015260136024820152720416464726573732063616e6e6f74206973203606c1b604482015260640161089f565b600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0392909216919091179055565b6060806001600160a01b038316611beb5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161089f565b6001600160a01b0383166000908152600b602052604090206002810154611c545760405162461bcd60e51b815260206004820152601760248201527f557365722773206e756d6265727320697320656d707479000000000000000000604482015260640161089f565b600281015460009067ffffffffffffffff811115611c7457611c74612664565b604051908082528060200260200182016040528015611c9d578160200160208202803683370190505b50600283015490915060009067ffffffffffffffff811115611cc157611cc1612664565b604051908082528060200260200182016040528015611cea578160200160208202803683370190505b50905060005b6002840154811015611dd257836002018181548110611d1157611d116129de565b90600052602060002090602091828204019190069054906101000a900460ff16838281518110611d4357611d436129de565b602002602001019060ff16908160ff16815250506000846002018281548110611d6e57611d6e6129de565b600091825260208083208183040154601f9092166101000a90910460ff1680835260038801909152604090912054845191925090849084908110611db457611db46129de565b60209081029190910101525080611dca81612a07565b915050611cf0565b50909590945092505050565b600080805b600f54811015611e73576000600f8281548110611e0257611e026129de565b600091825260208083206040805180820190915260029093020180546001600160a01b031683526001908101549183018290525460055492945091611e46916129c7565b611e5091906129c7565b9050611e5c81856129f4565b935050508080611e6b90612a07565b915050611de3565b50919050565b611e82336120c9565b80611e9757506000546001600160a01b031633145b611eb35760405162461bcd60e51b815260040161089f90612a20565b600755565b611ec1336120c9565b80611ed657506000546001600160a01b031633145b611ef25760405162461bcd60e51b815260040161089f90612a20565b600555565b600981815481106107e657600080fd5b611f10336120c9565b80611f2557506000546001600160a01b031633145b611f415760405162461bcd60e51b815260040161089f90612a20565b600355565b6000546001600160a01b03163314611f705760405162461bcd60e51b815260040161089f9061294e565b4780611fb75760405162461bcd60e51b81526020600482015260166024820152754e6f2062616c616e636520746f20776974686472617760501b604482015260640161089f565b600080546040516001600160a01b0390911690610dac90849084818181858888f193505050503d8060008114612009576040519150601f19603f3d011682016040523d82523d6000602084013e61200e565b606091505b50509050806120515760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161089f565b60405182815233907fd7a4aa9f3dca5f6606ac15d7e1850920201bbb02c38cd986793779f58ae0dfd39060200160405180910390a25050565b612093336120c9565b806120a857506000546001600160a01b031633145b6120c45760405162461bcd60e51b815260040161089f90612a20565b600655565b6000805b60095481101561212957826001600160a01b0316600982815481106120f4576120f46129de565b6000918252602090912001546001600160a01b0316036121175750600192915050565b8061212181612a07565b9150506120cd565b50600092915050565b60085460ff16156121815760405162461bcd60e51b815260206004820152601960248201527810dbdb9d1c9858dd081c185d5cd959081d1bc81cdd589b5a5d603a1b604482015260640161089f565b6001600160a01b0383166000908152600b60205260409020600454600282015411156122045760405162461bcd60e51b815260206004820152602c60248201527f496e73756666696369656e74206e756d626572732c204d41585f4e554d42455260448201526b29afa822a92fa82620aca2a960a11b606482015260840161089f565b60008211801561221657506002548211155b6122535760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420706f696e747360901b604482015260640161089f565b60035482826001015461226691906129f4565b11156122ad5760405162461bcd60e51b815260206004820152601660248201527513585e1a5b5d5b481c1bda5b9d1cc81c995858da195960521b604482015260640161089f565b6000805b6002830154811015612316578460ff168360020182815481106122d6576122d66129de565b60009182526020918290209181049091015460ff601f9092166101000a900416036123045760019150612316565b8061230e81612a07565b9150506122b1565b5080612357576002820180546001810182556000918252602091829020918104909101805460ff808816601f9094166101000a938402930219169190911790555b6000805b600e548110156123bc578560ff16600e828154811061237c5761237c6129de565b60009182526020918290209181049091015460ff601f9092166101000a900416036123aa57600191506123bc565b806123b481612a07565b91505061235b565b508061241657600e8054600181018255600091909152602081047fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd01805460ff808916601f9094166101000a938402930219169190911790555b826001015460000361246557600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50180546001600160a01b031916331790555b8383600101600082825461247991906129f4565b909155505060ff85166000908152600384016020526040812080548692906124a29084906129f4565b909155505060ff85166000908152600c6020526040812080548692906124c99084906129f4565b90915550506040805160ff871681526020810186905233917f0cfbfdb94503425da12b0ae543b24d58e84a59eac4f375c39f25aeff65448a23910160405180910390a2505050505050565b50805460008255601f016020900490600052602060002090810190612539919061257b565b50565b5080546000825590600052602060002090810190612539919061257b565b50805460008255600202906000526020600020908101906125399190612594565b5b80821115612590576000815560010161257c565b5090565b5b808211156125905780546001600160a01b031916815560006001820155600201612595565b80356001600160a01b038116811461177757600080fd5b6000602082840312156125e357600080fd5b6125ec826125ba565b9392505050565b60006020828403121561260557600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b8281101561265757815180516001600160a01b03168552860151868501529284019290850190600101612629565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156126a3576126a3612664565b604052919050565b600067ffffffffffffffff8211156126c5576126c5612664565b5060051b60200190565b803560ff8116811461177757600080fd5b600082601f8301126126f157600080fd5b81356020612706612701836126ab565b61267a565b82815260059290921b8401810191818101908684111561272557600080fd5b8286015b848110156127405780358352918301918301612729565b509695505050505050565b6000806040838503121561275e57600080fd5b823567ffffffffffffffff8082111561277657600080fd5b818501915085601f83011261278a57600080fd5b8135602061279a612701836126ab565b82815260059290921b840181019181810190898411156127b957600080fd5b948201945b838610156127de576127cf866126cf565b825294820194908201906127be565b965050860135925050808211156127f457600080fd5b50612801858286016126e0565b9150509250929050565b600081518084526020808501945080840160005b8381101561283e57815160ff168752958201959082019060010161281f565b509495945050505050565b60408152600061285c604083018561280b565b82810360208481019190915284518083528582019282019060005b8181101561289357845183529383019391830191600101612877565b5090979650505050505050565b600080604083850312156128b357600080fd5b6128bc836125ba565b91506128ca602084016126cf565b90509250929050565b6020815260006125ec602083018461280b565b6000602082840312156128f857600080fd5b6125ec826126cf565b6020808252825182820181905260009190848201906040850190845b818110156129425783516001600160a01b03168352928401929184019160010161291d565b50909695505050505050565b60208082526021908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6040820152603760f91b606082015260800190565b6000826129ac57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610f8457610f846129b1565b634e487b7160e01b600052603260045260246000fd5b80820180821115610f8457610f846129b1565b600060018201612a1957612a196129b1565b5060010190565b6020808252602f908201527f4f6e6c79206d6f64657261746f7273206f72204f776e65722063616e2063616c60408201526e36103a3434b990333ab731ba34b7b760891b606082015260800190565b600060ff821660ff8103612a8557612a856129b1565b60010192915050565b81810381811115610f8457610f846129b1565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220a14ca9963a3c65b6d313c121c531ddeb0de1627f40ff22ecb87eba0dc46572d264736f6c63430008150033";

type LotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lottery__factory extends ContractFactory {
  constructor(...args: LotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _moderators: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lottery> {
    return super.deploy(_moderators, overrides || {}) as Promise<Lottery>;
  }
  override getDeployTransaction(
    _moderators: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_moderators, overrides || {});
  }
  override attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  override connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new utils.Interface(_abi) as LotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}
